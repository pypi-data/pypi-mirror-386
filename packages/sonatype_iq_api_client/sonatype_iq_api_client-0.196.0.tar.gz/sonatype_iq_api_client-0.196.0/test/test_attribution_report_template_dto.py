# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.attribution_report_template_dto import AttributionReportTemplateDTO

class TestAttributionReportTemplateDTO(unittest.TestCase):
    """AttributionReportTemplateDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AttributionReportTemplateDTO:
        """Test AttributionReportTemplateDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AttributionReportTemplateDTO`
        """
        model = AttributionReportTemplateDTO()
        if include_optional:
            return AttributionReportTemplateDTO(
                document_title = '',
                footer = '',
                header = '',
                id = '',
                include_appendix = True,
                include_inner_source = True,
                include_sonatype_special_licenses = True,
                include_standard_license_texts = True,
                include_table_of_contents = True,
                last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                template_name = ''
            )
        else:
            return AttributionReportTemplateDTO(
        )
        """

    def testAttributionReportTemplateDTO(self):
        """Test AttributionReportTemplateDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
