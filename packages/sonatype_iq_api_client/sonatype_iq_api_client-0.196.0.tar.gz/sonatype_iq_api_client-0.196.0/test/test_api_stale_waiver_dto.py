# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.api_stale_waiver_dto import ApiStaleWaiverDTO

class TestApiStaleWaiverDTO(unittest.TestCase):
    """ApiStaleWaiverDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiStaleWaiverDTO:
        """Test ApiStaleWaiverDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiStaleWaiverDTO`
        """
        model = ApiStaleWaiverDTO()
        if include_optional:
            return ApiStaleWaiverDTO(
                comment = '',
                constraint_facts = [
                    sonatype_iq_api_client.models.api_constraint_fact_dto.ApiConstraintFactDTO(
                        constraint_id = '', 
                        constraint_name = '', 
                        reasons = [
                            sonatype_iq_api_client.models.api_condition_fact_reason_dto.ApiConditionFactReasonDTO(
                                reason = '', )
                            ], )
                    ],
                create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                creator_id = '',
                creator_name = '',
                expiry_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                policy_id = '',
                policy_name = '',
                policy_waiver_reason_id = '',
                reason_text = '',
                scope_owner_id = '',
                scope_owner_name = '',
                scope_owner_type = '',
                stale_evaluations = sonatype_iq_api_client.models.api_stale_evaluations_dto.ApiStaleEvaluationsDTO(
                    applications = [
                        sonatype_iq_api_client.models.api_stale_application_evaluation_dto.ApiStaleApplicationEvaluationDTO(
                            application = sonatype_iq_api_client.models.api_application_base_dto.ApiApplicationBaseDTO(
                                contact_user_name = '', 
                                id = '', 
                                name = '', 
                                organization_id = '', 
                                public_id = '', ), 
                            stages = [
                                sonatype_iq_api_client.models.api_stale_evaluation_stage_dto.ApiStaleEvaluationStageDTO(
                                    last_evaluation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    stage_id = '', )
                                ], )
                        ], 
                    repositories = [
                        sonatype_iq_api_client.models.api_stale_repository_evaluation_dto.ApiStaleRepositoryEvaluationDTO(
                            repository = sonatype_iq_api_client.models.api_repository_dto.ApiRepositoryDTO(
                                audit_enabled = True, 
                                format = '', 
                                namespace_confusion_protection_enabled = True, 
                                policy_compliant_component_selection_enabled = True, 
                                public_id = '', 
                                quarantine_enabled = True, 
                                repository_id = '', 
                                type = '', ), )
                        ], ),
                waiver_id = ''
            )
        else:
            return ApiStaleWaiverDTO(
        )
        """

    def testApiStaleWaiverDTO(self):
        """Test ApiStaleWaiverDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
