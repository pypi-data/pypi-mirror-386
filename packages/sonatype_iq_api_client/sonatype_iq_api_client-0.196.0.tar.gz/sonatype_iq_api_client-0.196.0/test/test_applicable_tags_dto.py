# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.applicable_tags_dto import ApplicableTagsDTO

class TestApplicableTagsDTO(unittest.TestCase):
    """ApplicableTagsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicableTagsDTO:
        """Test ApplicableTagsDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicableTagsDTO`
        """
        model = ApplicableTagsDTO()
        if include_optional:
            return ApplicableTagsDTO(
                application_categories_by_owner = [
                    sonatype_iq_api_client.models.tags_by_owner_dto.TagsByOwnerDTO(
                        application_categories = [
                            sonatype_iq_api_client.models.api_application_category_dto.ApiApplicationCategoryDTO(
                                color = '', 
                                description = '', 
                                id = '', 
                                name = '', 
                                organization_id = '', )
                            ], 
                        owner_id = '', 
                        owner_name = '', 
                        owner_type = 'application', )
                    ]
            )
        else:
            return ApplicableTagsDTO(
        )
        """

    def testApplicableTagsDTO(self):
        """Test ApplicableTagsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
