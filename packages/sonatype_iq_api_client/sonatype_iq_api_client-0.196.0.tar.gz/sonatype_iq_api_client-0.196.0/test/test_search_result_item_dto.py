# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.search_result_item_dto import SearchResultItemDTO

class TestSearchResultItemDTO(unittest.TestCase):
    """SearchResultItemDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchResultItemDTO:
        """Test SearchResultItemDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchResultItemDTO`
        """
        model = SearchResultItemDTO()
        if include_optional:
            return SearchResultItemDTO(
                application_category_color = '',
                application_category_description = '',
                application_category_id = '',
                application_category_name = '',
                application_id = '',
                application_name = '',
                application_public_id = '',
                application_version = '',
                component_hash = '',
                component_identifier = sonatype_iq_api_client.models.api_component_identifier_dtov2.ApiComponentIdentifierDTOV2(
                    coordinates = {
                        'key' : ''
                        }, 
                    format = '', ),
                component_label_color = '',
                component_label_description = '',
                component_label_id = '',
                component_label_name = '',
                component_name = '',
                item_type = '',
                organization_id = '',
                organization_name = '',
                policy_evaluation_stage = '',
                policy_id = '',
                policy_name = '',
                policy_threat_category = '',
                policy_threat_level = 56,
                report_id = '',
                result_index = 56,
                sbom_specification = '',
                vulnerability_description = '',
                vulnerability_id = '',
                vulnerability_status = ''
            )
        else:
            return SearchResultItemDTO(
        )
        """

    def testSearchResultItemDTO(self):
        """Test SearchResultItemDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
