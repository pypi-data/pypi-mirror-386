# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.api_third_party_scan_result_dto import ApiThirdPartyScanResultDTO

class TestApiThirdPartyScanResultDTO(unittest.TestCase):
    """ApiThirdPartyScanResultDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiThirdPartyScanResultDTO:
        """Test ApiThirdPartyScanResultDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiThirdPartyScanResultDTO`
        """
        model = ApiThirdPartyScanResultDTO()
        if include_optional:
            return ApiThirdPartyScanResultDTO(
                components_affected = sonatype_iq_api_client.models.api_evaluation_result_counter_dto.ApiEvaluationResultCounterDTO(
                    critical = 56, 
                    moderate = 56, 
                    severe = 56, ),
                embeddable_report_html_url = '',
                error_message = '',
                grandfathered_policy_violations = 56,
                is_error = True,
                legacy_violations = 56,
                open_policy_violations = sonatype_iq_api_client.models.api_evaluation_result_counter_dto.ApiEvaluationResultCounterDTO(
                    critical = 56, 
                    moderate = 56, 
                    severe = 56, ),
                policy_action = '',
                report_data_url = '',
                report_html_url = '',
                report_pdf_url = ''
            )
        else:
            return ApiThirdPartyScanResultDTO(
        )
        """

    def testApiThirdPartyScanResultDTO(self):
        """Test ApiThirdPartyScanResultDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
