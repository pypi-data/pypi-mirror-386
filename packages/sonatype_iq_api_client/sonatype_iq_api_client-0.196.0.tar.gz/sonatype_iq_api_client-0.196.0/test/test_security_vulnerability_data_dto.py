# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.security_vulnerability_data_dto import SecurityVulnerabilityDataDTO

class TestSecurityVulnerabilityDataDTO(unittest.TestCase):
    """SecurityVulnerabilityDataDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SecurityVulnerabilityDataDTO:
        """Test SecurityVulnerabilityDataDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SecurityVulnerabilityDataDTO`
        """
        model = SecurityVulnerabilityDataDTO()
        if include_optional:
            return SecurityVulnerabilityDataDTO(
                advisories = [
                    sonatype_iq_api_client.models.reference_link_dto.ReferenceLinkDTO(
                        reference_type = '', 
                        url = '', )
                    ],
                categories = [
                    ''
                    ],
                component_detection_markdown = '',
                component_explanation_markdown = '',
                component_recommendation_markdown = '',
                custom_data = sonatype_iq_api_client.models.security_vulnerability_custom_data_dto.SecurityVulnerabilityCustomDataDTO(
                    cvss_severity = 1.337, 
                    cvss_vector = '', 
                    cwe_id = '', 
                    remediation = '', ),
                description = '',
                detection_markdown = '',
                detection_type = '',
                epss_data = sonatype_iq_api_client.models.epss_data.EpssData(
                    current_score = 1.337, ),
                explanation_markdown = '',
                identification_source = '',
                identifier = '',
                is_advanced_vulnerability_detection = True,
                kev_data = sonatype_iq_api_client.models.kev_data.KevData(
                    is_kev = True, ),
                main_severity = sonatype_iq_api_client.models.security_vulnerability_severity_dto.SecurityVulnerabilitySeverityDTO(
                    score = 1.337, 
                    source = '', 
                    source_label = '', 
                    vector = '', ),
                recommendation_markdown = '',
                research_type = 'FAST_TRACK',
                root_causes = [
                    sonatype_iq_api_client.models.root_cause_dto.RootCauseDTO(
                        list_of_paths = [
                            ''
                            ], 
                        version_range = '', )
                    ],
                severity_scores = [
                    sonatype_iq_api_client.models.security_vulnerability_severity_dto.SecurityVulnerabilitySeverityDTO(
                        score = 1.337, 
                        source = '', 
                        source_label = '', 
                        vector = '', )
                    ],
                source = sonatype_iq_api_client.models.vulnerability_source_dto.VulnerabilitySourceDTO(
                    long_name = '', 
                    short_name = '', ),
                vuln_ids = [
                    ''
                    ],
                vulnerability_link = '',
                vulnerable_version_ranges = [
                    ''
                    ],
                weakness = sonatype_iq_api_client.models.security_vulnerability_weakness_dto.SecurityVulnerabilityWeaknessDTO(
                    cwe_ids = [
                        sonatype_iq_api_client.models.cwe_id_dto.CweIdDTO(
                            id = '', 
                            uri = '', )
                        ], 
                    cwe_source = '', )
            )
        else:
            return SecurityVulnerabilityDataDTO(
        )
        """

    def testSecurityVulnerabilityDataDTO(self):
        """Test SecurityVulnerabilityDataDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
