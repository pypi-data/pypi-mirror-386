# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.api_constraint_violation_dto import ApiConstraintViolationDTO

class TestApiConstraintViolationDTO(unittest.TestCase):
    """ApiConstraintViolationDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiConstraintViolationDTO:
        """Test ApiConstraintViolationDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiConstraintViolationDTO`
        """
        model = ApiConstraintViolationDTO()
        if include_optional:
            return ApiConstraintViolationDTO(
                constraint_id = '',
                constraint_name = '',
                reasons = [
                    sonatype_iq_api_client.models.api_constraint_violation_reason_dto.ApiConstraintViolationReasonDTO(
                        reason = '', 
                        reference = sonatype_iq_api_client.models.trigger_reference.TriggerReference(
                            type = 'SECURITY_VULNERABILITY_REFID', 
                            value = '', ), )
                    ]
            )
        else:
            return ApiConstraintViolationDTO(
        )
        """

    def testApiConstraintViolationDTO(self):
        """Test ApiConstraintViolationDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
