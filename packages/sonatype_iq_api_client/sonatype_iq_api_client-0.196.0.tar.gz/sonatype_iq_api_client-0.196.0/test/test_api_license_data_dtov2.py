# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.api_license_data_dtov2 import ApiLicenseDataDTOV2

class TestApiLicenseDataDTOV2(unittest.TestCase):
    """ApiLicenseDataDTOV2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiLicenseDataDTOV2:
        """Test ApiLicenseDataDTOV2
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiLicenseDataDTOV2`
        """
        model = ApiLicenseDataDTOV2()
        if include_optional:
            return ApiLicenseDataDTOV2(
                declared_licenses = [
                    sonatype_iq_api_client.models.api_license_dto.ApiLicenseDTO(
                        license_id = '', 
                        license_name = '', )
                    ],
                effective_license_threats = [
                    sonatype_iq_api_client.models.api_license_threat_dtov2.ApiLicenseThreatDTOV2(
                        license_threat_group_category = '', 
                        license_threat_group_level = 56, 
                        license_threat_group_name = '', )
                    ],
                effective_licenses = [
                    sonatype_iq_api_client.models.api_license_dto.ApiLicenseDTO(
                        license_id = '', 
                        license_name = '', )
                    ],
                observed_licenses = [
                    sonatype_iq_api_client.models.api_license_dto.ApiLicenseDTO(
                        license_id = '', 
                        license_name = '', )
                    ],
                overridden_licenses = [
                    sonatype_iq_api_client.models.api_license_dto.ApiLicenseDTO(
                        license_id = '', 
                        license_name = '', )
                    ],
                status = ''
            )
        else:
            return ApiLicenseDataDTOV2(
        )
        """

    def testApiLicenseDataDTOV2(self):
        """Test ApiLicenseDataDTOV2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
