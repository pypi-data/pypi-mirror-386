# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.prioritized_component import PrioritizedComponent

class TestPrioritizedComponent(unittest.TestCase):
    """PrioritizedComponent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PrioritizedComponent:
        """Test PrioritizedComponent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PrioritizedComponent`
        """
        model = PrioritizedComponent()
        if include_optional:
            return PrioritizedComponent(
                action = '',
                component_hash = '',
                component_identifier = sonatype_iq_api_client.models.component_identifier.ComponentIdentifier(
                    coordinates = {
                        'key' : ''
                        }, 
                    format = '', ),
                dependency_type = '',
                display_name = '',
                has_auto_waiver = True,
                has_expired_waiver = True,
                has_fail_action_on_component = True,
                has_same_violations_on_main = True,
                has_soon_to_expire_waiver = True,
                highest_reachable_threat = 56,
                highest_threat = 56,
                highest_threat_policy_constraint_name = '',
                highest_threat_policy_name = '',
                is_all_violations_waived = True,
                priority = 56,
                remediation_type = 'next-no-violations',
                remediation_version = '',
                security_reachable = True,
                waived_violations_count = 56,
                waiver_expiration_details = ''
            )
        else:
            return PrioritizedComponent(
        )
        """

    def testPrioritizedComponent(self):
        """Test PrioritizedComponent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
