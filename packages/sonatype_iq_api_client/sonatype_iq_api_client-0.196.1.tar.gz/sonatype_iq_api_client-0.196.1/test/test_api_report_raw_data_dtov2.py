# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.api_report_raw_data_dtov2 import ApiReportRawDataDTOV2

class TestApiReportRawDataDTOV2(unittest.TestCase):
    """ApiReportRawDataDTOV2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiReportRawDataDTOV2:
        """Test ApiReportRawDataDTOV2
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiReportRawDataDTOV2`
        """
        model = ApiReportRawDataDTOV2()
        if include_optional:
            return ApiReportRawDataDTOV2(
                components = [
                    sonatype_iq_api_client.models.api_report_component_dtov2.ApiReportComponentDTOV2(
                        component_identifier = sonatype_iq_api_client.models.api_component_identifier_dtov2.ApiComponentIdentifierDTOV2(
                            coordinates = {
                                'key' : ''
                                }, 
                            format = '', ), 
                        cpe = '', 
                        dependency_data = sonatype_iq_api_client.models.api_dependency_data_dto.ApiDependencyDataDTO(
                            direct_dependency = True, 
                            inner_source = True, 
                            inner_source_data = [
                                sonatype_iq_api_client.models.inner_source_data.InnerSourceData(
                                    inner_source_component_purl = '', 
                                    owner_application_id = '', 
                                    owner_application_name = '', )
                                ], 
                            parent_component_purls = [
                                ''
                                ], ), 
                        display_name = '', 
                        filenames = [
                            ''
                            ], 
                        hash = '', 
                        identification_source = '', 
                        license_data = sonatype_iq_api_client.models.api_license_data_dtov2.ApiLicenseDataDTOV2(
                            declared_licenses = [
                                sonatype_iq_api_client.models.api_license_dto.ApiLicenseDTO(
                                    license_id = '', 
                                    license_name = '', )
                                ], 
                            effective_license_threats = [
                                sonatype_iq_api_client.models.api_license_threat_dtov2.ApiLicenseThreatDTOV2(
                                    license_threat_group_category = '', 
                                    license_threat_group_level = 56, 
                                    license_threat_group_name = '', )
                                ], 
                            effective_licenses = [
                                sonatype_iq_api_client.models.api_license_dto.ApiLicenseDTO(
                                    license_id = '', 
                                    license_name = '', )
                                ], 
                            observed_licenses = [
                                
                                ], 
                            overridden_licenses = [
                                
                                ], 
                            status = '', ), 
                        match_state = '', 
                        package_url = '', 
                        pathnames = [
                            ''
                            ], 
                        proprietary = True, 
                        security_data = sonatype_iq_api_client.models.api_security_data_dto.ApiSecurityDataDTO(
                            security_issues = [
                                sonatype_iq_api_client.models.api_security_issue_dto.ApiSecurityIssueDTO(
                                    analysis = sonatype_iq_api_client.models.api_security_issue_analysis_dto.ApiSecurityIssueAnalysisDTO(
                                        detail = '', 
                                        justification = '', 
                                        response = '', 
                                        state = '', ), 
                                    cvss_vector = '', 
                                    cvss_vector_source = '', 
                                    cwe = '', 
                                    reference = '', 
                                    severity = 1.337, 
                                    source = '', 
                                    status = '', 
                                    threat_category = '', 
                                    url = '', )
                                ], ), 
                        sha256 = '', 
                        swid = sonatype_iq_api_client.models.swid.Swid(
                            name = '', 
                            patch = True, 
                            tag_id = '', 
                            tag_version = 56, 
                            text = sonatype_iq_api_client.models.attachment_text.AttachmentText(
                                content = '', 
                                content_type = '', 
                                encoding = '', ), 
                            version = '', ), 
                        third_party = True, )
                    ],
                global_information = sonatype_iq_api_client.models.api_global_information_dtov2.ApiGlobalInformationDTOV2(
                    data_version_date = '', ),
                match_summary = sonatype_iq_api_client.models.api_match_state_summary_dtov2.ApiMatchStateSummaryDTOV2(
                    known_component_count = 56, 
                    total_component_count = 56, )
            )
        else:
            return ApiReportRawDataDTOV2(
        )
        """

    def testApiReportRawDataDTOV2(self):
        """Test ApiReportRawDataDTOV2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
