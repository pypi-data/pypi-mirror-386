# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.api_applied_license_overrides_dto import ApiAppliedLicenseOverridesDTO

class TestApiAppliedLicenseOverridesDTO(unittest.TestCase):
    """ApiAppliedLicenseOverridesDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiAppliedLicenseOverridesDTO:
        """Test ApiAppliedLicenseOverridesDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiAppliedLicenseOverridesDTO`
        """
        model = ApiAppliedLicenseOverridesDTO()
        if include_optional:
            return ApiAppliedLicenseOverridesDTO(
                license_overrides_by_owner = [
                    sonatype_iq_api_client.models.license_override_by_owner.LicenseOverrideByOwner(
                        license_override = sonatype_iq_api_client.models.license_override.LicenseOverride(
                            comment = '', 
                            component_identifier = sonatype_iq_api_client.models.component_identifier.ComponentIdentifier(
                                coordinates = {
                                    'key' : ''
                                    }, 
                                format = '', ), 
                            id = '', 
                            license_ids = [
                                ''
                                ], 
                            owner_id = '', 
                            status = 'OPEN', ), 
                        owner_id = '', 
                        owner_name = '', 
                        owner_type = 'application', )
                    ]
            )
        else:
            return ApiAppliedLicenseOverridesDTO(
        )
        """

    def testApiAppliedLicenseOverridesDTO(self):
        """Test ApiAppliedLicenseOverridesDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
