# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.policy_fact import PolicyFact

class TestPolicyFact(unittest.TestCase):
    """PolicyFact unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PolicyFact:
        """Test PolicyFact
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PolicyFact`
        """
        model = PolicyFact()
        if include_optional:
            return PolicyFact(
                component_facts = [
                    sonatype_iq_api_client.models.component_fact.ComponentFact(
                        component_identifier = sonatype_iq_api_client.models.component_identifier.ComponentIdentifier(
                            coordinates = {
                                'key' : ''
                                }, 
                            format = '', ), 
                        constraint_facts = [
                            sonatype_iq_api_client.models.constraint_fact.ConstraintFact(
                                condition_facts = [
                                    sonatype_iq_api_client.models.condition_fact.ConditionFact(
                                        condition_index = 56, 
                                        condition_type_id = '', 
                                        reason = '', 
                                        reference = sonatype_iq_api_client.models.trigger_reference.TriggerReference(
                                            type = 'SECURITY_VULNERABILITY_REFID', 
                                            value = '', ), 
                                        summary = '', 
                                        trigger_json = '', )
                                    ], 
                                constraint_id = '', 
                                constraint_name = '', 
                                operator_name = '', )
                            ], 
                        display_name = sonatype_iq_api_client.models.component_display_name.ComponentDisplayName(
                            name = '', 
                            parts = [
                                sonatype_iq_api_client.models.component_display_name_part.ComponentDisplayNamePart(
                                    field = '', 
                                    value = '', )
                                ], ), 
                        hash = '', 
                        pathnames = [
                            ''
                            ], )
                    ],
                policy_id = '',
                policy_name = '',
                policy_violation_id = '',
                threat_level = 56
            )
        else:
            return PolicyFact(
        )
        """

    def testPolicyFact(self):
        """Test PolicyFact"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
