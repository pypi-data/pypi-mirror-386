# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.api_source_control_dto import ApiSourceControlDTO

class TestApiSourceControlDTO(unittest.TestCase):
    """ApiSourceControlDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiSourceControlDTO:
        """Test ApiSourceControlDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiSourceControlDTO`
        """
        model = ApiSourceControlDTO()
        if include_optional:
            return ApiSourceControlDTO(
                base_branch = '',
                close_pr_after_days = 56,
                close_pr_after_days_open_enabled = True,
                close_pr_on_failed_checks_enabled = True,
                commit_status_enabled = True,
                enable_pull_requests = True,
                enable_status_checks = True,
                id = '',
                inner_source_automated_updates_enabled = True,
                manual_pull_requests_enabled = True,
                owner_id = '',
                provider = '',
                pull_request_commenting_enabled = True,
                remediation_pull_requests_enabled = True,
                repository_url = '',
                source_control_evaluations_enabled = True,
                source_control_scan_target = '',
                ssh_enabled = True,
                status_checks_enabled = True,
                token = '',
                username = ''
            )
        else:
            return ApiSourceControlDTO(
        )
        """

    def testApiSourceControlDTO(self):
        """Test ApiSourceControlDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
