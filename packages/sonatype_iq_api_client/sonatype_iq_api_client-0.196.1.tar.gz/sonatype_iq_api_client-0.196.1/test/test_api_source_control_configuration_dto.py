# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.api_source_control_configuration_dto import ApiSourceControlConfigurationDTO

class TestApiSourceControlConfigurationDTO(unittest.TestCase):
    """ApiSourceControlConfigurationDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiSourceControlConfigurationDTO:
        """Test ApiSourceControlConfigurationDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiSourceControlConfigurationDTO`
        """
        model = ApiSourceControlConfigurationDTO()
        if include_optional:
            return ApiSourceControlConfigurationDTO(
                clone_directory = '',
                commit_email = '',
                commit_username = '',
                default_branch_monitoring_interval_hours = 56,
                default_branch_monitoring_start_time = '',
                git_executable = '',
                git_implementation = 'native',
                git_timeout_seconds = 56,
                pr_comment_purge_window = 56,
                pr_event_purge_window = 56,
                pull_request_monitoring_interval_seconds = 56,
                use_username_in_repository_clone_url = True
            )
        else:
            return ApiSourceControlConfigurationDTO(
        )
        """

    def testApiSourceControlConfigurationDTO(self):
        """Test ApiSourceControlConfigurationDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
