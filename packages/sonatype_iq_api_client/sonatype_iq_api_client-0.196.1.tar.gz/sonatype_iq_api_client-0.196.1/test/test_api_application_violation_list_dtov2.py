# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.api_application_violation_list_dtov2 import ApiApplicationViolationListDTOV2

class TestApiApplicationViolationListDTOV2(unittest.TestCase):
    """ApiApplicationViolationListDTOV2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiApplicationViolationListDTOV2:
        """Test ApiApplicationViolationListDTOV2
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiApplicationViolationListDTOV2`
        """
        model = ApiApplicationViolationListDTOV2()
        if include_optional:
            return ApiApplicationViolationListDTOV2(
                application_violations = [
                    sonatype_iq_api_client.models.api_application_violation_dtov2.ApiApplicationViolationDTOV2(
                        application = sonatype_iq_api_client.models.api_application_base_dto.ApiApplicationBaseDTO(
                            contact_user_name = '', 
                            id = '', 
                            name = '', 
                            organization_id = '', 
                            public_id = '', ), 
                        policy_violations = [
                            sonatype_iq_api_client.models.api_enhanced_policy_violation_dtov2.ApiEnhancedPolicyViolationDTOV2(
                                component = sonatype_iq_api_client.models.api_component_dtov2.ApiComponentDTOV2(
                                    component_identifier = sonatype_iq_api_client.models.api_component_identifier_dtov2.ApiComponentIdentifierDTOV2(
                                        coordinates = {
                                            'key' : ''
                                            }, 
                                        format = '', ), 
                                    display_name = '', 
                                    hash = '', 
                                    package_url = '', 
                                    proprietary = True, 
                                    sha256 = '', 
                                    third_party = True, ), 
                                constraint_violations = [
                                    sonatype_iq_api_client.models.api_constraint_violation_dto.ApiConstraintViolationDTO(
                                        constraint_id = '', 
                                        constraint_name = '', 
                                        reasons = [
                                            sonatype_iq_api_client.models.api_constraint_violation_reason_dto.ApiConstraintViolationReasonDTO(
                                                reason = '', 
                                                reference = sonatype_iq_api_client.models.trigger_reference.TriggerReference(
                                                    type = 'SECURITY_VULNERABILITY_REFID', 
                                                    value = '', ), )
                                            ], )
                                    ], 
                                fix_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                is_legacy = True, 
                                is_waived = True, 
                                legacy_violation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                open_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                policy_id = '', 
                                policy_name = '', 
                                policy_violation_id = '', 
                                report_id = '', 
                                report_url = '', 
                                stage_id = '', 
                                threat_level = 56, 
                                waive_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], )
                    ]
            )
        else:
            return ApiApplicationViolationListDTOV2(
        )
        """

    def testApiApplicationViolationListDTOV2(self):
        """Test ApiApplicationViolationListDTOV2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
