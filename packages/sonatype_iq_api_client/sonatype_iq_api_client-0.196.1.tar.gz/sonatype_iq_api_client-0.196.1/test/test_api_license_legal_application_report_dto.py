# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sonatype_iq_api_client.models.api_license_legal_application_report_dto import ApiLicenseLegalApplicationReportDTO

class TestApiLicenseLegalApplicationReportDTO(unittest.TestCase):
    """ApiLicenseLegalApplicationReportDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiLicenseLegalApplicationReportDTO:
        """Test ApiLicenseLegalApplicationReportDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiLicenseLegalApplicationReportDTO`
        """
        model = ApiLicenseLegalApplicationReportDTO()
        if include_optional:
            return ApiLicenseLegalApplicationReportDTO(
                components = [
                    sonatype_iq_api_client.models.api_license_legal_component_dto.ApiLicenseLegalComponentDTO(
                        component_identifier = sonatype_iq_api_client.models.api_component_identifier_dtov2.ApiComponentIdentifierDTOV2(
                            coordinates = {
                                'key' : ''
                                }, 
                            format = '', ), 
                        display_name = '', 
                        hash = '', 
                        license_legal_data = sonatype_iq_api_client.models.api_license_legal_data_dto.ApiLicenseLegalDataDTO(
                            attributions = [
                                sonatype_iq_api_client.models.component_obligation_attribution_dto.ComponentObligationAttributionDTO(
                                    content = '', 
                                    id = '', 
                                    last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_updated_by_username = '', 
                                    obligation_name = '', 
                                    owner_id = '', 
                                    package_url = '', )
                                ], 
                            component_copyright_id = '', 
                            component_copyright_last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            component_copyright_last_updated_by_username = '', 
                            component_copyright_scope_owner_id = '', 
                            component_licenses_id = '', 
                            component_licenses_last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            component_licenses_last_updated_by_username = '', 
                            component_licenses_scope_owner_id = '', 
                            component_notices_id = '', 
                            component_notices_last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            component_notices_last_updated_by_username = '', 
                            component_notices_scope_owner_id = '', 
                            copyrights = [
                                sonatype_iq_api_client.models.api_license_legal_copyright_dto.ApiLicenseLegalCopyrightDTO(
                                    content = '', 
                                    id = '', 
                                    original_content_hash = '', 
                                    status = 'enabled', )
                                ], 
                            declared_licenses = [
                                ''
                                ], 
                            effective_license_status = '', 
                            effective_licenses = [
                                ''
                                ], 
                            highest_effective_license_threat_group = sonatype_iq_api_client.models.api_license_threat_dtov2.ApiLicenseThreatDTOV2(
                                license_threat_group_category = '', 
                                license_threat_group_level = 56, 
                                license_threat_group_name = '', ), 
                            license_files = [
                                sonatype_iq_api_client.models.api_license_legal_file_dto.ApiLicenseLegalFileDTO(
                                    content = '', 
                                    id = '', 
                                    original_content_hash = '', 
                                    rel_path = '', 
                                    status = 'enabled', )
                                ], 
                            notice_files = [
                                sonatype_iq_api_client.models.api_license_legal_file_dto.ApiLicenseLegalFileDTO(
                                    content = '', 
                                    id = '', 
                                    original_content_hash = '', 
                                    rel_path = '', 
                                    status = 'enabled', )
                                ], 
                            obligations = [
                                sonatype_iq_api_client.models.api_license_legal_obligation_dto.ApiLicenseLegalObligationDTO(
                                    comment = '', 
                                    id = '', 
                                    last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_updated_by_username = '', 
                                    name = '', 
                                    owner_id = '', 
                                    package_url = '', 
                                    status = 'OPEN', )
                                ], 
                            observed_licenses = [
                                ''
                                ], 
                            source_links = [
                                sonatype_iq_api_client.models.legal_source_link_dto.LegalSourceLinkDTO(
                                    content = '', 
                                    id = '', 
                                    original_content = '', 
                                    status = 'enabled', )
                                ], ), 
                        package_url = '', 
                        stage_scans = [
                            sonatype_iq_api_client.models.api_license_legal_stage_scan_dto.ApiLicenseLegalStageScanDTO(
                                scan_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                scan_id = '', 
                                stage_name = '', )
                            ], )
                    ],
                license_legal_metadata = [
                    sonatype_iq_api_client.models.api_license_legal_metadata_dto.ApiLicenseLegalMetadataDTO(
                        is_multi = True, 
                        license_id = '', 
                        license_name = '', 
                        license_text = '', 
                        obligations = [
                            sonatype_iq_api_client.models.license_obligation_dto.LicenseObligationDTO(
                                name = '', 
                                obligation_texts = [
                                    ''
                                    ], )
                            ], 
                        single_license_ids = [
                            ''
                            ], 
                        threat_group = sonatype_iq_api_client.models.license_threat_group_dto.LicenseThreatGroupDTO(
                            name = '', 
                            threat_level = 56, ), )
                    ]
            )
        else:
            return ApiLicenseLegalApplicationReportDTO(
        )
        """

    def testApiLicenseLegalApplicationReportDTO(self):
        """Test ApiLicenseLegalApplicationReportDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
