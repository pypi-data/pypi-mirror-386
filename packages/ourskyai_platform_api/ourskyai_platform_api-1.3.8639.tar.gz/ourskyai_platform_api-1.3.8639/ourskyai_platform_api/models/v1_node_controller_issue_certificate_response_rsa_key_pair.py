# coding: utf-8

"""
    OurSky Platform

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.3.8639
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictStr

class V1NodeControllerIssueCertificateResponseRsaKeyPair(BaseModel):
    """
    V1NodeControllerIssueCertificateResponseRsaKeyPair
    """
    certificate: StrictStr = Field(..., description="x509 cert containing the public key of the RSA key pair. pem encoded")
    private_key: StrictStr = Field(..., alias="privateKey", description="Private key of the RSA key pair. pem encoded")
    cert_chain: StrictStr = Field(..., alias="certChain", description="Certificate chain of the RSA key pair. pem encoded")
    __properties = ["certificate", "privateKey", "certChain"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> V1NodeControllerIssueCertificateResponseRsaKeyPair:
        """Create an instance of V1NodeControllerIssueCertificateResponseRsaKeyPair from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> V1NodeControllerIssueCertificateResponseRsaKeyPair:
        """Create an instance of V1NodeControllerIssueCertificateResponseRsaKeyPair from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return V1NodeControllerIssueCertificateResponseRsaKeyPair.parse_obj(obj)

        _obj = V1NodeControllerIssueCertificateResponseRsaKeyPair.parse_obj({
            "certificate": obj.get("certificate"),
            "private_key": obj.get("privateKey"),
            "cert_chain": obj.get("certChain")
        })
        return _obj


