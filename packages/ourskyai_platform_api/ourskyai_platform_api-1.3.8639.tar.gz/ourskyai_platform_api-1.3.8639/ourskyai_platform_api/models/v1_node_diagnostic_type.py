# coding: utf-8

"""
    OurSky Platform

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.3.8639
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class V1NodeDiagnosticType(str, Enum):
    """
    V1NodeDiagnosticType
    """

    """
    allowed enum values
    """
    SLEW_SPEED_DEGREES_PER_SECOND = 'SLEW_SPEED_DEGREES_PER_SECOND'
    CENTERING_TIME_MS = 'CENTERING_TIME_MS'
    POINTING_ERROR_DEGREES = 'POINTING_ERROR_DEGREES'
    SLEW_TIMING_CHECKED = 'SLEW_TIMING_CHECKED'
    CAMERA_CHECKED = 'CAMERA_CHECKED'
    CAMERA_HAS_GPS = 'CAMERA_HAS_GPS'
    MOUNT_CHECKED = 'MOUNT_CHECKED'
    OPTICAL_TUBE_CHECKED = 'OPTICAL_TUBE_CHECKED'
    ELEVATION_MASK_CHECKED = 'ELEVATION_MASK_CHECKED'
    TOTAL_DISK_BYTES = 'TOTAL_DISK_BYTES'
    AVAILABLE_DISK_BYTES = 'AVAILABLE_DISK_BYTES'
    AVAILABLE_MEMORY_BYTES = 'AVAILABLE_MEMORY_BYTES'
    NTP_TIME_DRIFT_MS = 'NTP_TIME_DRIFT_MS'
    SYSTEM_UPTIME_S = 'SYSTEM_UPTIME_S'
    APPLICATION_UPTIME_S = 'APPLICATION_UPTIME_S'
    APPLICATION_CPU_TIME_S = 'APPLICATION_CPU_TIME_S'
    CPU_USAGE_LAST_SECOND_PCT = 'CPU_USAGE_LAST_SECOND_PCT'
    CPU_USAGE_LAST_MINUTE_PCT = 'CPU_USAGE_LAST_MINUTE_PCT'
    FOCUS_HFR_VALUES = 'FOCUS_HFR_VALUES'
    HAS_FOCUSER = 'HAS_FOCUSER'
    HAS_SAFETY_MONITOR = 'HAS_SAFETY_MONITOR'
    SAFETY_STATUS = 'SAFETY_STATUS'
    GNSS_CALIBRATION = 'GNSS_CALIBRATION'
    SATELLITE_CALIBRATION = 'SATELLITE_CALIBRATION'
    MOUNT_MODEL_CHECKED = 'MOUNT_MODEL_CHECKED'
    ASCOM_CAN_MOVE_BOTH_AXIS = 'ASCOM_CAN_MOVE_BOTH_AXIS'
    ASCOM_MAX_PRIMARY_AXIS_SPEED = 'ASCOM_MAX_PRIMARY_AXIS_SPEED'
    ASCOM_MAX_SECONDARY_AXIS_SPEED = 'ASCOM_MAX_SECONDARY_AXIS_SPEED'
    ASCOM_PRIMARY_SIGN_WEST = 'ASCOM_PRIMARY_SIGN_WEST'
    ASCOM_PRIMARY_SIGN_EAST = 'ASCOM_PRIMARY_SIGN_EAST'
    ASCOM_SECONDARY_SIGN_WEST = 'ASCOM_SECONDARY_SIGN_WEST'
    ASCOM_SECONDARY_SIGN_EAST = 'ASCOM_SECONDARY_SIGN_EAST'
    ASCOM_PRIMARY_REVERSED = 'ASCOM_PRIMARY_REVERSED'
    ASCOM_SECONDARY_REVERSED = 'ASCOM_SECONDARY_REVERSED'
    ASCOM_CAN_TRACK_LEO = 'ASCOM_CAN_TRACK_LEO'
    FOCUSER_RANGE = 'FOCUSER_RANGE'
    SKY_FLATS_TAKEN = 'SKY_FLATS_TAKEN'

    @classmethod
    def from_json(cls, json_str: str) -> V1NodeDiagnosticType:
        """Create an instance of V1NodeDiagnosticType from a JSON string"""
        return V1NodeDiagnosticType(json.loads(json_str))


