# coding: utf-8

"""
    OurSky Platform

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.3.8639
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ourskyai_platform_api.models.v1_update_node_components_request import V1UpdateNodeComponentsRequest  # noqa: E501

class TestV1UpdateNodeComponentsRequest(unittest.TestCase):
    """V1UpdateNodeComponentsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1UpdateNodeComponentsRequest:
        """Test V1UpdateNodeComponentsRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1UpdateNodeComponentsRequest`
        """
        model = V1UpdateNodeComponentsRequest()  # noqa: E501
        if include_optional:
            return V1UpdateNodeComponentsRequest(
                node_id = '',
                camera = ourskyai_platform_api.models.v1_update_node_components_request_camera.V1UpdateNodeComponentsRequest_camera(
                    model = '', 
                    pixel_size_microns = 1.337, 
                    full_well_capacity = 56, 
                    pixels_x = 56, 
                    pixels_y = 56, 
                    megapixels = 1.337, 
                    chilled = True, 
                    shutter_type = 'ROLLING', 
                    gps_timestamps = True, 
                    sensor_xmm = 1.337, 
                    sensor_ymm = 1.337, 
                    unity_gain = 56, 
                    optimal_nighttime_gain = 56, 
                    optimal_nighttime_gain_offset = 56, 
                    optimal_nighttime_gain_mode = 56, 
                    supports_video_mode = True, 
                    adc_bit_depth = 56, 
                    quantum_efficiency = 1.337, 
                    gain_curves = [
                        ourskyai_platform_api.models.v1_gain_curve.V1GainCurve(
                            gain_mode = 56, 
                            gain_curve = [
                                ourskyai_platform_api.models.v1_gain_curve_point.V1GainCurvePoint(
                                    gain = 56, 
                                    e_adu = 1.337, )
                                ], 
                            readout_noise_curve = [
                                ourskyai_platform_api.models.v1_read_noise_point.V1ReadNoisePoint(
                                    gain = 56, 
                                    e_rms = 1.337, )
                                ], )
                        ], 
                    setup_actions = [
                        ourskyai_platform_api.models.v1_setup_action.V1SetupAction(
                            action = '', 
                            arguments = [
                                ''
                                ], )
                        ], 
                    is_color = True, ),
                mount = ourskyai_platform_api.models.v1_update_node_components_request_mount.V1UpdateNodeComponentsRequest_mount(
                    model = '', 
                    type = 'ALT_AZ', ),
                optical_tube = ourskyai_platform_api.models.v1_update_node_components_request_optical_tube.V1UpdateNodeComponentsRequest_opticalTube(
                    model = '', 
                    focal_length_mm = 56, 
                    aperture_mm = 56, 
                    type = 'NEWTONIAN', ),
                focuser = ourskyai_platform_api.models.v1_update_node_components_request_focuser.V1UpdateNodeComponentsRequest_focuser(
                    model = '', 
                    travel_distance_mm = 56, )
            )
        else:
            return V1UpdateNodeComponentsRequest(
                node_id = '',
        )
        """

    def testV1UpdateNodeComponentsRequest(self):
        """Test V1UpdateNodeComponentsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
