# coding: utf-8

"""
    OurSky Platform

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.3.8639
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field
from ourskyai_platform_api.models.pki_certificate import PKICertificate

class V2NodeControllerIssueCertificateResponse(BaseModel):
    """
    V2NodeControllerIssueCertificateResponse
    """
    signature_certificate: PKICertificate = Field(..., alias="signatureCertificate")
    encryption_certificate: PKICertificate = Field(..., alias="encryptionCertificate")
    __properties = ["signatureCertificate", "encryptionCertificate"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> V2NodeControllerIssueCertificateResponse:
        """Create an instance of V2NodeControllerIssueCertificateResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of signature_certificate
        if self.signature_certificate:
            _dict['signatureCertificate'] = self.signature_certificate.to_dict()
        # override the default output from pydantic by calling `to_dict()` of encryption_certificate
        if self.encryption_certificate:
            _dict['encryptionCertificate'] = self.encryption_certificate.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> V2NodeControllerIssueCertificateResponse:
        """Create an instance of V2NodeControllerIssueCertificateResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return V2NodeControllerIssueCertificateResponse.parse_obj(obj)

        _obj = V2NodeControllerIssueCertificateResponse.parse_obj({
            "signature_certificate": PKICertificate.from_dict(obj.get("signatureCertificate")) if obj.get("signatureCertificate") is not None else None,
            "encryption_certificate": PKICertificate.from_dict(obj.get("encryptionCertificate")) if obj.get("encryptionCertificate") is not None else None
        })
        return _obj


