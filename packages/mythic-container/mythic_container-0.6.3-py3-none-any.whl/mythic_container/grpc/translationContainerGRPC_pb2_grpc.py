# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import mythic_container.grpc.translationContainerGRPC_pb2 as translationContainerGRPC__pb2


class TranslationContainerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TranslateFromCustomToMythicFormat = channel.stream_stream(
                '/translationContainerServices.TranslationContainer/TranslateFromCustomToMythicFormat',
                request_serializer=translationContainerGRPC__pb2.TrCustomMessageToMythicC2FormatMessageResponse.SerializeToString,
                response_deserializer=translationContainerGRPC__pb2.TrCustomMessageToMythicC2FormatMessage.FromString,
                )
        self.TranslateFromMythicToCustomFormat = channel.stream_stream(
                '/translationContainerServices.TranslationContainer/TranslateFromMythicToCustomFormat',
                request_serializer=translationContainerGRPC__pb2.TrMythicC2ToCustomMessageFormatMessageResponse.SerializeToString,
                response_deserializer=translationContainerGRPC__pb2.TrMythicC2ToCustomMessageFormatMessage.FromString,
                )
        self.GenerateEncryptionKeys = channel.stream_stream(
                '/translationContainerServices.TranslationContainer/GenerateEncryptionKeys',
                request_serializer=translationContainerGRPC__pb2.TrGenerateEncryptionKeysMessageResponse.SerializeToString,
                response_deserializer=translationContainerGRPC__pb2.TrGenerateEncryptionKeysMessage.FromString,
                )


class TranslationContainerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TranslateFromCustomToMythicFormat(self, request_iterator, context):
        """rpc function(messageFromClient) messageToClient
        all of these functions start off by sending messageToClient and getting the result back
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TranslateFromMythicToCustomFormat(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateEncryptionKeys(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TranslationContainerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TranslateFromCustomToMythicFormat': grpc.stream_stream_rpc_method_handler(
                    servicer.TranslateFromCustomToMythicFormat,
                    request_deserializer=translationContainerGRPC__pb2.TrCustomMessageToMythicC2FormatMessageResponse.FromString,
                    response_serializer=translationContainerGRPC__pb2.TrCustomMessageToMythicC2FormatMessage.SerializeToString,
            ),
            'TranslateFromMythicToCustomFormat': grpc.stream_stream_rpc_method_handler(
                    servicer.TranslateFromMythicToCustomFormat,
                    request_deserializer=translationContainerGRPC__pb2.TrMythicC2ToCustomMessageFormatMessageResponse.FromString,
                    response_serializer=translationContainerGRPC__pb2.TrMythicC2ToCustomMessageFormatMessage.SerializeToString,
            ),
            'GenerateEncryptionKeys': grpc.stream_stream_rpc_method_handler(
                    servicer.GenerateEncryptionKeys,
                    request_deserializer=translationContainerGRPC__pb2.TrGenerateEncryptionKeysMessageResponse.FromString,
                    response_serializer=translationContainerGRPC__pb2.TrGenerateEncryptionKeysMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'translationContainerServices.TranslationContainer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TranslationContainer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TranslateFromCustomToMythicFormat(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/translationContainerServices.TranslationContainer/TranslateFromCustomToMythicFormat',
            translationContainerGRPC__pb2.TrCustomMessageToMythicC2FormatMessageResponse.SerializeToString,
            translationContainerGRPC__pb2.TrCustomMessageToMythicC2FormatMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TranslateFromMythicToCustomFormat(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/translationContainerServices.TranslationContainer/TranslateFromMythicToCustomFormat',
            translationContainerGRPC__pb2.TrMythicC2ToCustomMessageFormatMessageResponse.SerializeToString,
            translationContainerGRPC__pb2.TrMythicC2ToCustomMessageFormatMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateEncryptionKeys(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/translationContainerServices.TranslationContainer/GenerateEncryptionKeys',
            translationContainerGRPC__pb2.TrGenerateEncryptionKeysMessageResponse.SerializeToString,
            translationContainerGRPC__pb2.TrGenerateEncryptionKeysMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
