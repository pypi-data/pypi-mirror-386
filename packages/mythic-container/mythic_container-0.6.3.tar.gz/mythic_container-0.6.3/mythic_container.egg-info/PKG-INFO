Metadata-Version: 2.4
Name: mythic_container
Version: 0.6.3
Summary: Functionality for Mythic Services
Home-page: https://docs.mythic-c2.net/customizing/payload-type-development
Author: @its_a_feature_
Author-email: 
License: BSD3
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: aio_pika==9.4.1
Requires-Dist: dynaconf==3.2.5
Requires-Dist: ujson==5.9.0
Requires-Dist: aiohttp==3.9.3
Requires-Dist: psutil==5.9.8
Requires-Dist: grpcio
Requires-Dist: grpcio-tools
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: license-file
Dynamic: requires-dist
Dynamic: summary

# Mythic Payload Type Container

The `mythic_container` library provides the steps for defining and utilizing payload types, c2 profiles, translation containers, webhook containers, and logging containers for Mythic. 
Mythic is a Command and Control (C2) framework for Red Teaming with the code on GitHub (https://github.com/its-a-feature/Mythic) and the Mythic project's documentation on GitBooks (https://docs.mythic-c2.net). 

## Installation

You can install the mythic scripting interface from PyPI:

```
pip install mythic-container
```

## How to use

Use it with Mythic version 3.3.0.

For the main execution of the heartbeat and service functionality, simply import and start the service:
```
import mythic_container
import [my agent | my c2 profile | my translation container | my webhooks | my loggers | my eventing | my auth]
mythic_container.mythic_service.start_and_run_forever()
```

## Where is the code?

The code for this PyPi package can be found at https://github.com/MythicMeta/MythicContainerPyPi
